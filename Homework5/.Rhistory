knitr::opts_chunk$set(echo = TRUE)
# Alternative using dgeom function (note: dgeom uses x = k-1)
prob_1a_check <- dgeom(k-1, prob = p)
# Probability of first defect on 6th trial
k <- 6
prob_1a <- (q^(k-1)) * p
# Define the probability of defect
p <- 3/75  # probability of finding a defective bulb
# Display probabilities
cat("Probability of defect (p):", p, "\n")
cat("Probability of non-defect (q):", q, "\n")
# Using complement of CDF
prob_1 <- 1 - pgeom(2, prob = p)  # pgeom(k-1) gives P(X <= k)
cat("P(X >= 4):", round(prob_1, 3), "\n")
# Set seed for reproducibility
set.seed(20220707)
# Simulate rolling 5 dice 10,000 times
n_simulations <- 10000
n_dice <- 5
# For each simulation, roll 5 dice and count the number of ones
X <- replicate(n_simulations, {
dice_rolls <- sample(1:6, size = n_dice, replace = TRUE)
sum(dice_rolls == 1)  # Count how many ones
})
# For each simulation, roll 5 dice and count the number of ones
X <- replicate(n_simulations, {
dice_rolls <- sample(1:6, size = n_dice, replace = TRUE)
sum(dice_rolls == 1)  # Count how many ones
})
# Display first few values
cat("First 20 values of X:", head(X, 20), "\n")
cat("Summary statistics:\n")
